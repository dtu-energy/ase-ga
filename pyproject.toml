[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = 'ase-ga'
description='The Genetic Algorithm for the Atomic Simulation Environment'
version = "1.0.0"
readme = 'README.md'
license-files = ['LICENSE']
maintainers = [
    { name = "Steen Lysgaard", email = "stly@dtu.dk" }
]    

classifiers = [
    'Development Status :: 6 - Mature',
    'Intended Audience :: Science/Research',
    'Operating System :: OS Independent',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3.13',
    'Intended Audience :: Science/Research',
    'Topic :: Scientific/Engineering :: Physics'
]
requires-python = '>=3.9'
dependencies = [
    'ase>=3.25',
]

[project.urls]
Homepage = 'https://dtu-energy.github.io/ase-ga/'
Repository = 'https://github.com/dtu-energy/ase-ga'
Issues = 'https://github.com/dtu-energy/ase-ga/issues/'

[dependency-groups]
dev = [
    "pytest>=8.2.0",
    "pytest-xdist>=3.7.0",
]
docs = ['sphinx', 'sphinx_book_theme', 'pillow']
lint = ['mypy', 'ruff', 'coverage', 'types-docutils', 'types-PyMySQL', 'flake8']

# [tool.pytest.ini_options]
# testpaths = ['ase/test']
# markers = [
#     'calculator: parametrizes calculator tests with calculator factories',
#     'calculator_lite: for calculator tests; include in calculators-lite job',
#     'optimize: tests of optimizers',
#     'slow: test takes longer than a few seconds',
# ]

[tool.mypy]
ignore_missing_imports = true
no_implicit_optional = false
enable_error_code = 'ignore-without-code'

# [tool.coverage.run]
# source = ['ase']

# [tool.coverage.report]
# exclude_also = [
#     'if TYPE_CHECKING:',
#     'if __name__ == .__main__.:'
# ]

[tool.ruff]
line-length = 80
exclude = ['./build/', './dist', './doc/build']
src = ['ase', 'doc', 'tests']

[tool.ruff.format]
quote-style = 'single'
skip-magic-trailing-comma = false

[tool.ruff.lint]
preview = true  # necessary to activate many pycodestyle rules
select = [
    'F',  # Pyflakes
    'E',  # pycodestyle
    'W',  # pycodestyle
    'I'   # isort
]
ignore = [
    'E741',  # ambiguous-variable-name
    'W505',  # doc-line-too-long
]

[tool.ruff.lint.pycodestyle]
max-line-length = 80
max-doc-length = 80

[tool.ruff.lint.pydocstyle]
convention = 'numpy'

[tool.ruff.lint.isort]
known-first-party = ['ase-ga']

# [tool.scriv]
# output_file = 'doc/changelog.rst'
# insert_marker = 'scriv-auto-changelog-start'
# end_marker = 'scriv-auto-changelog-end'
# categories = [
#     'I/O',
#     'Calculators',
#     'Optimizers',
#     'Molecular dynamics',
#     'GUI',
#     'Development',
#     'Documentation',
#     'Other changes',
#     'Bugfixes'
# ]
